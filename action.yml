name: 'EKS Deploy'
inputs:
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  docker-image-name:
    required: true
  docker-image-tag:
    required: true
  eks-app-name:
    required: true
  eks-namespace:
    required: true
runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Deploy ${{ inputs.docker-image-tag }} to Kubernetes cluster
      uses: ianbelcher/eks-kubectl-action@master
      env:
        RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.docker-image-name }}:${{ inputs.docker-image-tag }}
      with:
        aws_access_key_id: ${{ inputs.aws-access-key-id }}
        aws_secret_access_key: ${{ inputs.aws-secret-access-key }}
        aws_region: us-west-2
        cluster_name: prod
        args: set image deployment/${{ inputs.eks-app-name }} ${{ inputs.eks-app-name }}=${{ env.RELEASE_IMAGE }} -n ${{ inputs.eks-namespace }}
    - name: Verify Kubernetes deployment
      uses: ianbelcher/eks-kubectl-action@master
      with:
        aws_access_key_id: ${{ inputs.aws-access-key-id }}
        aws_secret_access_key: ${{ inputs.aws-secret-access-key }}
        aws_region: us-west-2
        cluster_name: prod
        args: rollout status deployment/${{ inputs.eks-app-name}} -n ${{ inputs.eks-namespace}}
